package input;import enums.CommandWord;/** * author:  Michael Kolling Adapted: Giorgos Artemiou Version: 1.0 date:    July 1999 Adapted: * February 2008 * * This class holds information about a command that was issued by the user. A command currently * consists of two strings: a command word and a second word (for example, if the command was "take * map", then the two strings obviously are "take" and "map"). * * The way this is used is: Commands are already checked for being valid command words. If the user * entered an invalid command (a word that is not known) then the command word is <null>. * * If the command had only one word, then the second word is <null>. * * The second word is not checked at the moment. It can be anything. If this game is extended to * deal with items, then the second part of the command should probably be changed to be an item * rather than a String. */public class Command {  private CommandWord action;  private String secondWord;  public Command(CommandWord action, String secondWord) {    this.action = action;    this.secondWord = secondWord;  }  public CommandWord getCommandWord() {    return action;  }  public String getSecondWord() {    return secondWord;  }  public boolean isUnknown() {    return (action == CommandWord.UNKNOWN);  }  public boolean hasSecondWord() {    return (secondWord != null);  }}